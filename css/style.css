/*Your Code Here*/
/* PLEASE DO NOT REMOVE MY COMMENTS.  THEY HELP US HELP YOU DEBUG. */

/* Step 1: Write selector/rule property to add an underline when
links in the navigation are in the hover or focus state.*/

nav a:hover, nav a:focus {
  text-decoration: underline;
}

/* Step 2a: Write selector/rule property to position the default position for the skip class element*/

.skip a {
  position: absolute;
  top: -40px;
  overflow: hidden;
}

/* Step 2b: Write selector/rule property to position the skip class element when it is in focus*/

.skip a:focus {
  top: 20px;
}


/* Step 3: Write selector/rule property to style all elements when in focus*/
/* Any element in focus should have a 2px solid border on all sides. */

*:focus {
  outline: 2px solid;
}


/* Step 4: Write selector/rule property to style the container */
/* .container class uses grid:
Three columns: 1fr 5fr 1fr
Gap of 15px between rows;
Hint: review the Inspect Element images for this one */

.container {
  display: grid;
  grid-template-columns: 1fr 5fr 1fr;
  grid-gap: 15px;
}

/* Step 5: Write selector/rule property to add the background image to the 
first div in the grid  and place it in the grid. */
/* The first child of the container should
Take up  all of the columns
Use the header.jpg file as a non-repeating background image with parallax effect
You can NOT assume that the .overview class will always be the first child.   */

.container > div:first-child {
  background-image: url('../images/header.jpg');
  background-attachment: fixed;
  background-size: cover;
  background-position: center;
  grid-column: 1 / -1;
}


/* Steps 6 and 7: Write the selector/rule properties to add place the next elements in the next
 four rows in the grid. */

/*This will be a lot of rules.... but be strategic and combine seletors*/

/* The classes  .about, .method, .clients, and .contact:
Begin in 2nd column and span one column
Begin on the 2nd, 3rd, 4th and 5th rows respectively. */

.about, .method, .clients, .contact {
  grid-column: 2 / span 1;
}

.about {
  grid-row: 2;
}

.method {
  grid-row: 3;
}

.clients {
  grid-row: 4;
}

.contact {
  grid-row: 5;
}

/* The .about-image, .method-image, .clients-image, and .contact-image elements:
Cover all of the columns.
Have a maximum height of 600px
Hide any content that goes outside their grid cell. 
Begin on the 2nd, 3rd, 4th and 5th row respectively. */

.about-image, .method-image, .clients-image, .contact-image {
  grid-column: 1 / -1;
  max-height: 600px;
  overflow: hidden;
}

.about-image {
  grid-row: 2;
}

.method-image {
  grid-row: 3;
}

.clients-image {
  grid-row: 4;
}

.contact-image {
  grid-row: 5;
}


/* Step 8: Write the selector/rule property to style the .text-block class. */
/* The .text-block class:
Is centered horizontally and vertically with centered text. */

.text-block {
  display: grid;
  align-items: center;
  text-align: center;
  margin: auto;
}

/* Add your media query here */
  /* Step 9: Write the selector/rule property to style the nav element */


@media screen and (min-width: 800px) {
nav {
    text-align: right;
    padding: 30px 0px 30px 0px;
  }
 
  /* Step 10: Write the selector/rule property to update the .container class */
  .container {
    display: grid;
    grid-template-columns: 50px auto 500px auto 50px;
  }

  /* Steps 11 and 12: Update the grid-column property of the grid's children (where-needed)*/
  /* The .about, .clients, .method-image, .contact-image:
Begin in the third column and span two columns */

  .about, .clients, .method-image, .contact-image {
    grid-column: 3 / span 2;
  }

  .method, .contact, .about-image, .clients-image {
    grid-column: 2 / span 2;
  }

  /* The .method and .clients:

 /* Step 13:Write the selector/rule property to update the .text-block class */
  .text-block {
    max-height: 250px;
    overflow: auto;
  }
}

